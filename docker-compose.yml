version: '3.3'

#secrets:
#  S3_ACCESS_KEY:
#    file: secrets/access_key.txt
#  S3_SECRET_KEY:
#    file: secrets/secret_key.txt

services:
  glider-dac-providers-app: &provider_anchor
    container_name: glider-dac-providers-app
    restart: always
    build: .
    ports:
      - 5000:5000
    volumes:
      #- ./config.local.yml:/glider-dac/config.local.yml
      - log_volume:/glider-dac/logs
      - ${DATA_VOLUME:-data_volume}:/data
      - erddap_big_parent_directory:/erddapData
      - ./datasets.xml:/data/catalog/priv_erddap/datasets.xml
      - /data/catalog/priv_erddap
    #secrets:
    #  - S3_ACCESS_KEY
    #  - S3_SECRET_KEY
    environment:
      - FLASK_APP=glider_dac:create_app
      - DATA_ROOT=${DATA_ROOT}
      - DATA_VOLUME=${DATA_VOLUME}
      - FLAGS_DIR=${FLAGS_DIR}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - mysql
      - redis

  glider-dac-worker:
    <<: *provider_anchor
    container_name: glider-dac-worker
    command: python glider_dac/worker.py
    ports: []

  glider-dac-watchdog:
    <<: *provider_anchor
    container_name: glider-dac-watchdog
    command: python glider_dac_watchdog.py
    ports: []

  glider-dac-cron:
    <<: *provider_anchor
    container_name: glider-dac-cron
    user: root
    command: cron -f
    ports: []

  qartod-worker:
    build: .
    command: python /glider-dac/scripts/glider_qartod.py -w
    volumes:
      - ${DATA_VOLUME:-data_volume}:/data
      - log_volume:/glider-dac/logs
    restart: always
    environment:
      - DATA_VOLUME=${DATA_VOLUME}
      - DATA_ROOT=${DATA_ROOT}
      - FLAGS_DIR=${FLAGS_DIR}
      - REDIS_HOST=${REDIS_HOST}

  # For John Kerfoot's new status page application -- move elsewhere if needed
  mysql:
    restart: unless-stopped
    image: mysql:8
    container_name: mysql
    environment:
        - MYSQL_RANDOM_ROOT_PASSWORD=yes
        - MYSQL_ONETIME_PASSWORD=yes
    ports:
        - 3306:3306
    volumes:
      - status_mysql:/var/lib/mysql
    restart: always

  # TODO: THREDDS and ERDDAP will need volume configurations
  thredds:
    container_name: thredds
    image: unidata/thredds-docker:5.4
    ports:
      - 8082:8080
    volumes:
      - ${DATA_VOLUME:-data_volume}:/data
      - ./docker_contrib/catalog.xml:/usr/local/tomcat/content/thredds/catalog.xml
      - ./docker_contrib/threddsConfig.xml:/usr/local/tomcat/content/thredds/threddsConfig.xml
      - thredds_cache:/usr/local/tomcat/content/thredds/cache
      - thredds_logs:/usr/local/tomcat/content/thredds/logs
    environment:
      - DATA_VOLUME=${DATA_VOLUME}
    restart: always

  erddap:
    container_name: erddap
    image: axiom/docker-erddap:latest-jdk17-openjdk
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ${DATA_VOLUME:-data_volume}:/data
      - erddap_big_parent_directory:/erddapData
      - ./datasets.xml:/usr/local/tomcat/content/erddap/datasets.xml
    environment:
      - DATA_VOLUME=${DATA_VOLUME}

  redis:
    container_name: redis
    restart: always
    image: redis
    volumes:
      - redis_data:/data

volumes:
  data_volume:
  thredds_cache:
  thredds_logs:
  redis_data:
  status_mysql:
  log_volume:
  erddap_big_parent_directory:
