version: '2.1'

services:
  glider-dac-providers-app: &provider_anchor
    container_name: glider-dac-providers-app
    restart: always
    build: .
    ports:
      - 3000:5000
    volumes:
      - ./config.local.yml:/glider-dac/config.local.yml
    #  # - .:/glider-dac/  # For local development
      - ./users.db:/glider-dac/users.db

    depends_on:
      - mongo
      - redis

  glider-dac-worker:
    <<: *provider_anchor
    container_name: glider-dac-worker
    command: python glider_dac/worker.py
    ports: []

  glider-dac-watchdog:
    <<: *provider_anchor
    container_name: glider-dac-watchdog
    command: python glider_dac_watchdog.py
    ports: []
    # Update DATA_ROOT to point to ERDDAP directory
    environment:
      - DATA_ROOT=/data/data/priv_erddap
      - FLAGS_DIR=/scratch/tomcat-erddap-private/flag

  qartod_worker_1: &qartod
    container_name: qartod_worker_1
    command: python glider-dac/scripts/glider_qartod.py -w
    volumes:
      - /data/:/data
    # stdout_logfile=/home/glider/logs/qartod_qorker%(process_num)02d.log

  qartod_worker_2:
    << *qartod
    container_name: qartod_worker_2

  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - mongo_storage:/data/db
      - mongo_config:/data/configdb

  # TODO: THREDDS and ERDDAP will need volume configurations
  thredds:
    container_name: thredds
    image: unidata/thredds-docker:4.6.14
    ports:
      - 8082:8080

  erddap:
    container_name: erddap
    image: axiom/docker-erddap
    ports:
      - 8080:8080

  redis:
    container_name: redis
    restart: always
    image: redis
    volumes:
      - redis_data:/data

volumes:
  mongo_storage:
  mongo_config:
  redis_data:
